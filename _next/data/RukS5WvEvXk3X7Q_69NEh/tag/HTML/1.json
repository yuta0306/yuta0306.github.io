{"pageProps":{"TaggedPostData":[{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<h2>スマホに:hoverを適用させる方法</h2>\n<p>よく:hoverや:activeを使ってHTMLの装飾を行うと思います。</p>\n<p>しかし、おそらくあらゆるパターンに対応し切れておらす、モバイルファーストの社会の今、スマホでは:hover等が適応されていないといった問題を抱える方も多いでしょう。</p>\n<p>この解決方法はとても単純です。</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ontouchstart</span>=<span class=\"hljs-string\">\"\"</span>></span>\n</code></pre>\n<p>もしくは</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ontouched</span>=<span class=\"hljs-string\">\"\"</span>></span>\n</code></pre>\n<p>たったこれだけでOKです!!!</p>\n</body>\n</html>\n","Title":"スマホにも:hoverを対応させてみる","Date":"2020-07-10","Category":"Web","Tags":["HTML","CSS"],"Authors":"ゆうぼう","Slug":"touch-device-hover","Thumbnail":"/images/thumbnails/web.png","Description":"デフォルトでいつものようにCSSを書いていると、スマホなどのタッチデバイスでは、:hoverや:activeが適応されません。今となってはモバイルファーストの社会です。スマホにも適用してみましょう。","Published":true},{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<h2>改行する方法</h2>\n<p>全パターンに対応するためのHTMLのタグは****タグです。</p>\n<p>実際にコードを書くとこんな感じです。</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>テキストテキストテキストテキストテキス<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span>></span>テキストテキスト<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n</code></pre>\n<p>しかしこのままでは、画面幅によって以外のところで改行する可能性があります。</p>\n<h2>スマホの時だけ改行する</h2>\n<p>前のセクションの書き方ではうまくいかないことがあります。</p>\n<p>明示的に改行させたいタグにCSSを書いてあげましょう。</p>\n<p>するとこんな感じ。</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>テキストテキストテキストテキストテキス<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"sp\"</span>></span>テキストテキスト<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* デフォルトでは表示しない */</span>\n<span class=\"hljs-selector-class\">.sp</span> {\n    <span class=\"hljs-attribute\">display</span>: none;\n}\n<span class=\"hljs-comment\">/* 768px以下の時だけbrを表示する */</span>\n<span class=\"hljs-keyword\">@media</span> screen <span class=\"hljs-keyword\">and</span> (<span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">768px</span>) {\n    <span class=\"hljs-selector-class\">.sp</span> {\n        <span class=\"hljs-attribute\">display</span>: block;\n    }\n}\n</code></pre>\n<p>たったこれだけで、画面幅に合わせた改行の管理ができました。</p>\n<p>是非頭の片隅に入れながらコーディングをしてみてください。</p>\n</body>\n</html>\n","Title":"sp仕様(スマホ)の時のみ改行したい!!","Date":"2020-07-10","Category":"Web","Tags":["HTML","CSS"],"Authors":"ゆうぼう","Slug":"only_sp_newline","Thumbnail":"/images/thumbnails/web.png","Description":"スマホのように小さい画面になるとおかしなところで改行してみにくい。そんな時のCSSのTipsを紹介します。","Published":true}],"tag":"HTML","categories":["Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","Colab","conda","CSS","ffmpeg","Flask","Go","Google Colaboratory","Heroku","HTML","JavaScript","JSON","Kaggle","Linux","Mac","make","map","MeCab","ML","MySQL","NLP","node.js","Pandas","Python","Pytorch","pytorch-lightning","Scikit-learn","Selenium","SISR","subprocess","Super-Resolution","tensorflow","Tkinter","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド","超解像"],"pages":1,"page":1},"__N_SSG":true}