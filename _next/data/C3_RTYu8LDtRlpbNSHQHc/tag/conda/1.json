{"pageProps":{"TaggedPostData":[{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<p>Anacondaは、GUIで操作ができてやりやすいですが、起動もかなりおそくCLIでどうにかならないか<strong>conda create</strong>コマンドを使って環境を立てる事があります。しかし、ノリでEnterを押してしまってPythonのバージョンを指定し忘れることが...。かなりの弊害を生み出します。その際の対処法を共有します。</p>\n<h2>CLIでconda環境を作る方法</h2>\n<p>まずは、CLIで環境を作るコマンドの紹介です。</p>\n<pre><code class=\"hljs language-bash\">conda create -n your-env-name python=3.x\n</code></pre>\n<p>たったこれだけで環境を建てられます。</p>\n<h2>あ、やってしまった...python=3.x忘れた</h2>\n<p>僕がノリでガガガってコマンド打って最後にやり忘れるやつです。</p>\n<p>押してから気付くのです...<br>\nあ、やってしまった...python=3.xって打つの忘れた...と</p>\n<pre><code class=\"hljs language-bash\">conda create -n your-env-name\n</code></pre>\n<p>これやっちゃうとすごく焦るんですよね。なんでかっていうとですね</p>\n<pre><code class=\"hljs language-bash\">(base)$ conda create -n typo\n(base)$ conda activate typo\n(typo)$ pip list\nTraceback (most recent call last):\n  File <span class=\"hljs-string\">\"/usr/local/bin/pip\"</span>, line 6, <span class=\"hljs-keyword\">in</span> &#x3C;module>\n    from pip._internal.cli.main import main\nModuleNotFoundError: No module named <span class=\"hljs-string\">'pip._internal.cli.main'</span>\n</code></pre>\n<p><em>pipがない</em>...だと...!?</p>\n<p>これは困りました。。。しかもこの環境でやると、そこまで自分好みにカスタマイズしていない方は<em>python2</em>がデフォになっていると思います。</p>\n<p>いやぁ困った。</p>\n<h2>【解決策】condaにPythonをインストール</h2>\n<p>condaに<em>Pythonのバージョンを明示した上で</em>インストールすればうまくいきます！！！</p>\n<p>今回は、現状でAnacondaが対応している最新版の<em>Python3.8</em>をインストールします。</p>\n<pre><code class=\"hljs language-bash\">(typo)$ conda install python==3.8\nCollecting package metadata (current_repodata.json): <span class=\"hljs-keyword\">done</span>\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nCollecting package metadata (repodata.json): <span class=\"hljs-keyword\">done</span>\nSolving environment: <span class=\"hljs-keyword\">done</span>\n\n<span class=\"hljs-comment\">## Package Plan ##</span>\n\n  environment location: /Users/slothyubo/opt/anaconda3/envs/blog-tweet\n\n  added / updated specs:\n    - python==3.8\n\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    certifi-2020.6.20          |     pyhd3eb1b0_3         155 KB\n    libffi-3.2.1               |    h0a44026_1007          43 KB\n    python-3.8.0               |       h359304d_2        18.8 MB\n    ------------------------------------------------------------\n                                           Total:        19.0 MB\n\nThe following NEW packages will be INSTALLED:\n\n  ca-certificates    pkgs/main/osx-64::ca-certificates-2020.10.14-0\n  certifi            pkgs/main/noarch::certifi-2020.6.20-pyhd3eb1b0_3\n  libcxx             pkgs/main/osx-64::libcxx-10.0.0-1\n  libedit            pkgs/main/osx-64::libedit-3.1.20191231-h1de35cc_1\n  libffi             pkgs/main/osx-64::libffi-3.2.1-h0a44026_1007\n  ncurses            pkgs/main/osx-64::ncurses-6.2-h0a44026_1\n  openssl            pkgs/main/osx-64::openssl-1.1.1h-haf1e3a3_0\n  pip                pkgs/main/osx-64::pip-20.2.4-py38_0\n  python             pkgs/main/osx-64::python-3.8.0-h359304d_2\n  readline           pkgs/main/osx-64::readline-7.0-h1de35cc_5\n  setuptools         pkgs/main/osx-64::setuptools-50.3.0-py38h0dc7051_1\n  sqlite             pkgs/main/osx-64::sqlite-3.33.0-hffcf06c_0\n  tk                 pkgs/main/osx-64::tk-8.6.10-hb0a8c7a_0\n  wheel              pkgs/main/noarch::wheel-0.35.1-py_0\n  xz                 pkgs/main/osx-64::xz-5.2.5-h1de35cc_0\n  zlib               pkgs/main/osx-64::zlib-1.2.11-h1de35cc_3\n\n\nProceed ([y]/n)? y  <span class=\"hljs-comment\"># &#x3C;== yでEnter</span>\n\nDownloading and Extracting Packages\npython-3.8.0         | 18.8 MB   | <span class=\"hljs-comment\">######################################################### | 100% </span>\nlibffi-3.2.1         | 43 KB     | <span class=\"hljs-comment\">######################################################### | 100% </span>\ncertifi-2020.6.20    | 155 KB    | <span class=\"hljs-comment\">######################################################### | 100% </span>\nPreparing transaction: <span class=\"hljs-keyword\">done</span>\nVerifying transaction: <span class=\"hljs-keyword\">done</span>\nExecuting transaction: <span class=\"hljs-keyword\">done</span>\n</code></pre>\n<p>このようになり、インストールされました。</p>\n<p>また途中でpipも同時にインストールされており、これで無事にpipもインストールされるようになりました！</p>\n<p>確認</p>\n<pre><code class=\"hljs language-bash\">(typo)$ pip --version\npip 20.0.2 from /Users/user/opt/anaconda3/envs/static-site/lib/python3.7/site-packages/pip (python 3.7)\n</code></pre>\n<p>上記は人によりますが、しっかりpipが使えますね</p>\n<p>それでは、もし<strong>conda create</strong>でPythonのバージョンを書き忘れたら、これで解決しましょう！</p>\n</body>\n</html>\n","Title":"conda createでpythonのバージョン指定忘れた！","Date":"2020-11-01","Category":"Python","Tags":["Python","conda"],"Authors":"ゆうぼう","Slug":"conda-miss-pythonv","Thumbnail":"/images/thumbnails/python.jpg","Description":"Anacondaは、GUIで操作ができてやりやすいですが、起動もかなりおそくCLIでどうにかならないか「conda create」コマンドを使って環境を立てる事があります。しかし、ノリでEnterを押してしまってPythonのバージョンを指定し忘れることが...。かなりの弊害を生み出します。その際の対処法を共有します。","Published":true}],"tag":"conda","categories":["論文","Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","Colab","COMET,mental health,NLP,mental state knowledge,mentalisation,Contrasive Learning,MentalRoBERTa,KC-Net","conda","CSS","dialogue system","dialogue system,Internet-Augmented","dialogue system,knowledge-base","dialogue system,NLI","dialogue system,persona,Prompt-Tuning","dialogue system,survey,DST","DST","ESPNet","ffmpeg","Flask","Gating Mechanism","Go","Google Colaboratory","Heroku","Highway Transformer","HTML","humor detection","humor detection,multi-modal","JavaScript","JSON","Kaggle","laughter,shared laughter","Linux","Mac","make","map","MeCab","ML","MT,transformer,Multi-Hop Transformer","multi-modal","MySQL","NLP","Node","node.js","npm","Pandas","Poetry","Python","Pytorch","pytorch-lightning","Scikit-learn","Selenium","Self-Dependency-Units (SDU)","SISR","subprocess","Super-Resolution","survey","survey,dialogue system","survey,NLP,knowledge-base,PLMKE,commonsense,encyclopedic,Knowledge-Intensive NLP","tensorflow","Tkinter","transformer","transformer,Highway Transformer,Gating Mechanism,Self-Dependency-Units (SDU)","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド","超解像"],"pages":1,"page":1},"__N_SSG":true}