{"pageProps":{"postData":{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<p>画面をプリントしたいときとかって、無駄な情報があってそれを排除してプリントしたり保存したりしたい時ってあるんですよね。そこの広告いらないから...みたいな。JavaScriptから簡単に操作して画面をPDF保存とかできたのでその共有をします。</p>\n<h2>window.print() これだけでよかった</h2>\n<p>Webで開いている画面を印刷もしくはPDF文書として保存するときは、とても簡単。</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">print</span>()\n</code></pre>\n<p>この関数を使うだけで簡単に実行できました。</p>\n<p>とは言っても、この関数を使ってできることは今ある全てのDOM構造を反映してしまうことですかね。いらん情報消したいなぁぁ......。</p>\n<h2>いらないタグ一旦消してしまえ!!(終わったら勿論戻す)</h2>\n<p>さあ、そういうわけでいらない情報を消してしまお〜〜〜〜(暴論)</p>\n<p>ただし、*window.print()*したあとは戻してあげます。</p>\n<p>サンプルコードが以下です。</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-title function_\">printer</span> = (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">let</span> body = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">'body'</span>)[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">let</span> content = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">\"#target\"</span>)\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> child <span class=\"hljs-keyword\">of</span> body.<span class=\"hljs-property\">children</span>) {\n        child.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">visibility</span> = <span class=\"hljs-string\">'hidden'</span>\n    }\n    content.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">visibility</span> = <span class=\"hljs-string\">'visible'</span>\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">print</span>()\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> child <span class=\"hljs-keyword\">of</span> body.<span class=\"hljs-property\">children</span>) {\n        child.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">visibility</span> = <span class=\"hljs-string\">'visible'</span>\n    }\n}\n</code></pre>\n<p>これで欲しい部分だけ、基本的には印刷対象にできます。(例外はあると思う)</p>\n<p>フローはこんな感じ</p>\n<ol>\n<li>bodyと自分の欲しい所だけ押さえる</li>\n<li>bodyタグの下にあるやつを全部<em>visibility: hidden</em>に</li>\n<li>欲しかったやつだけ<em>visibility: visible</em>に</li>\n<li>**window.print()**で印刷</li>\n<li>全部<em>visibility: visible</em>に戻してあげる</li>\n</ol>\n<p>他にも良い方法があるかもしれませんけど、今回はこれで。</p>\n</body>\n</html>\n","Title":"JSで欲しい所だけを印刷するのすごく簡単だったってお話","Date":"2020-11-15","Category":"JavaScript","Tags":"JavaScript","Authors":"ゆうぼう","Slug":"js-print","Thumbnail":"/images/thumbnails/js.png","Description":"画面をプリントしたいときとかって、無駄な情報があってそれを排除してプリントしたり保存したりしたい時ってあるんですよね。そこの広告いらないから...みたいな。JavaScriptから簡単に操作して画面をPDF保存とかできたのでその共有をします。","Published":true},"categories":["論文","Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","Colab","COMET,mental health,NLP,mental state knowledge,mentalisation,Contrasive Learning,MentalRoBERTa,KC-Net","conda","CSS","dialogue system","dialogue system,Internet-Augmented","dialogue system,knowledge-base","dialogue system,NLI","dialogue system,persona,Prompt-Tuning","dialogue system,survey,DST","ESPNet","ffmpeg","Flask","Go","Google Colaboratory","Heroku","HTML","humor detection,multi-modal","JavaScript","JSON","Kaggle","laughter,shared laughter","Linux","Mac","make","map","MeCab","ML","MT,transformer,Multi-Hop Transformer","MySQL","NLP","Node","node.js","npm","Pandas","Poetry","Python","Pytorch","pytorch-lightning","Scikit-learn","Selenium","SISR","subprocess","Super-Resolution","survey,dialogue system","survey,NLP,knowledge-base,PLMKE,commonsense,encyclopedic,Knowledge-Intensive NLP","tensorflow","Tkinter","transformer,Highway Transformer,Gating Mechanism,Self-Dependency-Units (SDU)","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド","超解像"]},"__N_SSG":true}