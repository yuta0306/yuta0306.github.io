{"pageProps":{"TaggedPostData":[{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<p>※諸注意</p>\n<blockquote>\n<p>cf. @solafune(<a href=\"https://solafune.com\">https://solafune.com</a>) コンテストの参加以外を目的とした利用及び商用利用は禁止されています。商用利用・その他当コンテスト以外で利用したい場合はお問い合わせください。(<a href=\"https://solafune.com\">https://solafune.com</a>)</p>\n</blockquote>\n<p><a href=\"https://solafune.com/\">Solafune</a>というプラットフォームでのMScupで低解像度を超解像化する珍しいコンペが出てきて，楽しそうだと（実際楽しかったけど）2ヶ月従事したものの11位で終わってしまいました😭</p>\n<p>でも，学べることがたくさんあったし，画像系コンペに出てこなかったので，画像系でも活かせそうな知見が得られて楽しいコンペでした．</p>\n<p>実験してみて効いたこと効かなかったことや学んだことをまとめます．</p>\n<h2>結果報告</h2>\n<p>先に結果を報告してしまいます．</p>\n<p>タイトルですでに出オチですが，<strong>11位フィニッシュ</strong>でした🎉</p>\n<p>PublicもPrivateも共に11位だったので，Trust CV，Trust LBなコンペだったと思います．そのためとても取り組みやすかったです．</p>\n<p>また，ライセンス表記に対してシビアではありましたが，運営さんの方から使っていいライセンスが詳しく話されていたので，これに関しても取り組みやすかったと思っています．</p>\n<p>結果で見れば悔しい結果ですが，総評してとても楽しかったです🤗</p>\n<h2>コンペ概要</h2>\n<p>概要は以下です．</p>\n<blockquote>\n<p>衛星画像を活用する際の課題の一つに「解像度」の問題があります。人工衛星は広域を撮影できる一方で、解像度の低さがボトルネックになります。近年、解像度が高い衛星画像の提供・販売が始まっていますが、利用可能な高解像データは世界で最も解像度が高い画像でも30cm程度です。また、高解像度のデータは値段が高く、利用規約にも様々な制限が課せられています。さらに、現時点では高解像度の画像データは法律で利用を禁止している国もあります。 そのため、今回のコンテストでは高解像度のデータを安く利用するための手段として、超解像を扱います。将来的に高解像度の衛星画像を扱えるようになることを想定して、本コンテストでは25 cm解像度の画像データを扱います。「超解像」という技術を通して、衛星データや航空写真などの地理空間データの社会実装が加速することを期待しています。</p>\n</blockquote>\n<p>与えられて低解像度の画像に対して，高解像化をかけるモデル，アルゴリズムを作成し，SSIMが高くすることが課題でした．</p>\n<p>SSIMは以下で表され，これを最大化することを目的とします．</p>\n<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>S</mi><mi>I</mi><mi>M</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><msub><mi>μ</mi><mi>x</mi></msub><msub><mi>μ</mi><mi>y</mi></msub><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><msub><mi>σ</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>μ</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>μ</mi><mi>y</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msubsup><mi>σ</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>σ</mi><mi>y</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">SSIM(x, y) = \\frac{(2\\mu_x\\mu_y + c_1)(2\\sigma_{xy} + c_2)}{(\\mu_x^2 + \\mu_y^2 + c_1)(\\sigma_x^2 + \\sigma_y^2 + c_2)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SS</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6747em;vertical-align:-0.6424em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0323em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4249em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4249em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5073em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6424em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h2>My Solution</h2>\n<p>僕のSolutionは大したことができませんでした．というのも，たくさんの実験を試したのですが，ほとんどうまくいかず悪化し，結局Seed Averagingなどの手抜きアイデアが最終サブになってしまったからです．</p>\n<p>とは言いつつも，おそらく僕独自の手法も入っているのではないかと思うので参考になればと思います．</p>\n<h3>モデル概要</h3>\n<p>訓練時は以下のようなモデル設計になっています．</p>\n<p><img src=\"/images/article/mscup/mscup_train.jpeg\" alt=\"訓練時モデル\"></p>\n<p>推論時は<strong>Seed Averaging</strong>と**TTA（Test Time Augmentation）**を利用して，テストデータでの推論時にロバストに推論ができるようにしました．Seed Averagingは5つくらいのモデルの平均をとったはずです．</p>\n<p>Seed AveragingやTTAは正直つまらない解法だと思っていますが，<strong>Sobel Filterを利用したLoss関数</strong>や<strong>CutMixやCutout</strong>などのData Augmentationが個人的な解法のウリではあります．</p>\n<p>また，僕がコンペを進める中での一番力を入れたことは，<strong>Loss関数による精度向上</strong>です．モデルも比較しましたが，結局SOTAモデルのSwinIRが圧巻で，Augmentationも思ったほど効かなかったので，Loss関数で制御することが最もの試みでした．これは独自の取り組みだと思っています（思いたい）</p>\n<p><a href=\"#%E5%AE%9F%E9%A8%93%E4%B8%AD%E3%81%AE%E8%AA%B2%E9%A1%8C%E6%84%9F%E3%81%A8%E5%B7%A5%E5%A4%AB\">次のセクション</a>で，なぜその実装をしたかと結果を話したいと思います．</p>\n<h3>実験中の課題感と対処法</h3>\n<p>実験している中での課題をまずは簡単に．</p>\n<ol>\n<li><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%82%BB%E3%83%83%E3%83%88%E3%81%8C%E5%B0%91%E3%81%AA%E3%81%84\">データセットが少ない</a>\n<ul>\n<li>画像が大きいので，クロップすればデータはたくさんあるのですが，多様性という面では多いとは言えなかったかもしれない．</li>\n</ul>\n</li>\n<li><strong>回転のAugmentationを加えるとノイズになる</strong>\n<ul>\n<li>エッジの再現性が重要となる超解像タスクでは，回転後のギザギザがノイズになってしまう．</li>\n<li>初めて知ったけど， 超解像タスクでは90度単位での回転が基本動作．画像見比べてなるほどってなった．</li>\n</ul>\n</li>\n<li><strong>超解像時にエイリアシングが起きたとき，エッジの向きに再現性がない</strong>\n<ul>\n<li>データを見ていてこれが問題と感じて，Sobel Filterを施そうと...</li>\n<li>細くは改めて話します．</li>\n</ul>\n</li>\n<li>Augmentationなんでもいいと思いきや，CutBlurやMixupはノイズだった\n<ul>\n<li>実装の苦労の割に大幅悪化で辛かった...</li>\n</ul>\n</li>\n</ol>\n<p>それでは上記について，細かく述べていこうと思います．</p>\n<h4>データセットが少ない</h4>\n<p>訓練データは60シーンあり，クロップすればデータは多く感じるものの，やはり多様性という時点では少ないなぁという印象でした．</p>\n<p>上位者の公開Solutionでは外部データの利用が鍵になったという指摘もあり，ここの調べを怠ったのが大敗につながってしまったのかなとも思っています．</p>\n<p>そうは言っても全く対処しなかったわけではなく，「<a href=\"https://arxiv.org/abs/2004.00448\">Rethinking Data Augmentation for Image Super-resolution: A Comprehensive Analysis and a New Strategy</a>」で提案されたData Augmentationの手法をPytorchパイプラインに合うように再実装し，実験はしました．</p>\n<p>効き目は以下のような感じでした．</p>\n<table>\n<thead>\n<tr>\n<th>手法</th>\n<th>説明</th>\n<th align=\"center\">効き目</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CutBlur</td>\n<td>低解像度に高解像度の画像を部分的に差し込む（またはその逆）</td>\n<td align=\"center\">×</td>\n</tr>\n<tr>\n<td>Cutout</td>\n<td>一定確率でピクセル値を0にする</td>\n<td align=\"center\">△</td>\n</tr>\n<tr>\n<td>CutMix</td>\n<td>異なる画像を部分的に差し込む</td>\n<td align=\"center\">○</td>\n</tr>\n<tr>\n<td>Mixup</td>\n<td>beta分布に従って異なる画像を混合する</td>\n<td align=\"center\">×</td>\n</tr>\n<tr>\n<td>CutMixup</td>\n<td>CutMixとCutupを同時に行う</td>\n<td align=\"center\">×</td>\n</tr>\n<tr>\n<td>Blend</td>\n<td>一様分布に従ってサンプリングされた色を混合する</td>\n<td align=\"center\">△</td>\n</tr>\n<tr>\n<td>RGBPermutation</td>\n<td>RGBの順番を変える</td>\n<td align=\"center\">△</td>\n</tr>\n</tbody>\n</table>\n<p>実際に効いているかはそこまで詳しく見ることはできていませんが，スコアや生成された高解像度画像を見ているとこんな感じだったと思います．</p>\n<p>効き目の詳細は改めて話します．</p>\n<h4>回転のAugmentationを加えるとノイズになる</h4>\n<p>これは最初気づかなくて，エッジがめちゃくちゃ鈍った画像が生成されたので分析した結果わかったことです．</p>\n<p>画像ドメインを持っている人ならば当たり前に感じてしまうかもしれませんが，画像にドメインのない人にとっては最後まで気づかなくてもおかしくなかったと思っています．</p>\n<p>ライブラリの仕様でも，回転を加える関数には，<em>interpolation</em>などのデータ補間のための引数があるはずです．</p>\n<p>例えば<em>torchvision</em>ですが，ランダムでの回転は以下で実装されます．</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> torchvision.transforms <span class=\"hljs-keyword\">as</span> T\n\n<span class=\"hljs-comment\"># ニアレストネイバーでの補間</span>\ntransforms = T.RandomRotation(degrees=<span class=\"hljs-number\">180</span>, interpolation=T.InterpolationMode.NEAREST)\n<span class=\"hljs-comment\"># バイリニアでの補間</span>\ntransforms = T.RandomRotation(degrees=<span class=\"hljs-number\">180</span>, interpolation=T.InterpolationMode.BILINEAR)\n</code></pre>\n<p>この実装を見る限りでも，エッジの部分が補間されることで元の入力画像との再現が取れなくなってしまうことは想像できると思います．</p>\n<p>これは学びでしたが，超解像タスクにおいては，<strong>回転のAugmentationは90度単位</strong>というのが主流のようでした．</p>\n<h4>超解像時にエイリアシングが起きたとき，エッジの向きに再現性がない</h4>\n<p>本当は画像を見せた方が早いのですが，今回のコンペで使用された画像は公開できないので，手書きで頑張って表現しようと思います．</p>\n<p>田んぼみたいに，ある程度イネを植えている方向に規則的な向きがあるような感覚を想像してください．</p>\n<p>実験中下のような画像が生成されてしまいました．</p>\n<p><img src=\"/images/article/mscup/edge.png\" alt=\"エッジが再現できない生成画像\"></p>\n<p>SSIMを最適化するのですが，<a href=\"https://kornia.readthedocs.io/en/latest/index.html\">kornia</a>で実装されていた<em>SSIM Loss</em>では，入力画像をGaussian Filterで平滑化してからSSIMの計算をかけていたので，ぼやけた状態でうまくreconstructできるかを学習してしまっていたのだと思います．</p>\n<p>そこで僕は追加で<em>Smooth L1 Loss</em>をさらに追加しました．こちらはピクセルごとでロスが計算されるので細かいところまで再現できるかなと思ったのですが，MSEなどのピクセルを見るLoss関数は画像全体がぼやけてしまうらしいです．</p>\n<p>結果行き着いた発想が，「<strong>エッジに対してLossを計算してしまえばいいじゃない？？</strong>」でした．</p>\n<p>これは結果的にスコア微増に起因したのですが，前に示した図のようなエイリアシングが取れていることが多く，実装と結果が直感的だったので最後まで採用しました．数学的に正しい感じは全くありませんが，なんかうまくいったので（正しいかは知りません．こいつほんまに微分可能なんか？ってお気持ちのままやってました笑）</p>\n<p>実装上は，Sobel Filterをかけて，エッジ抽出された画像に対してSmooth L1 Lossを計算するように計算しました．</p>\n<p>当時の実装を下記に載っけておきます．</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MeanSobelError</span>(nn.Module):\n   <span class=\"hljs-string\">\"\"\"\n   Sobel Gradient Loss Function\n   \"\"\"</span>\n   <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self,\n      normalized: <span class=\"hljs-built_in\">bool</span> = <span class=\"hljs-literal\">True</span>,\n      eps: <span class=\"hljs-built_in\">float</span> = <span class=\"hljs-number\">1e-6</span>,\n      reduction: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">'mean'</span>,\n   </span>):\n      <span class=\"hljs-built_in\">super</span>(MeanSobelError, self).__init__()\n      self.<span class=\"hljs-built_in\">filter</span> = kornia.filters.Sobel(\n         normalized=normalized,\n         eps=eps,\n      )\n      self.lossfn = nn.SmoothL1Loss(reduction=reduction)\n\n   <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">forward</span>(<span class=\"hljs-params\">self,\n      y_pred: torch.Tensor,\n      y_true: torch.Tensor,\n   </span>):\n      filtered_pred = self.<span class=\"hljs-built_in\">filter</span>(y_pred)\n      filtered_true = self.<span class=\"hljs-built_in\">filter</span>(y_true)\n\n      loss = self.lossfn(filtered_pred, filtered_true)\n      <span class=\"hljs-keyword\">return</span> loss\n</code></pre>\n<h4>Augmentationなんでもいいと思いきや，CutBlurやMixupはノイズだった</h4>\n<p>SISRタスクにおいて提案されていたAugmentationは全部効くだろう！というスタンスで，<strong>コンペ終盤に時間をめちゃくちゃかけて実装</strong>し，全部ごちゃ混ぜでやってみたのですが，スコアが激減....</p>\n<p>幾つかパターンを試しましたが，CutBlurやMixup系はスコアの悪化の原因だったっぽいです．</p>\n<ul>\n<li>Mixup\n<ul>\n<li>画像を割合で混合するので，エッジが鈍りがちになってしまいました．</li>\n<li>車や車線など，エッジがはっきりした画像生成が必要だったため，ノイズになってしまったのかもしれません．</li>\n</ul>\n</li>\n<li>CutBlur\n<ul>\n<li>こちらは単純にモデル作成が下手くそなのかも知れないです．</li>\n<li>SwinIRに入力する前に，ダウンサンプリング層を用意する必要がありました．</li>\n<li>↑これがうまく学習できず，生成される画像の色がおかしかったです．\n<ul>\n<li>一応ダウンサンプリング層のみのwarmupなども試したが，うまく適合できず，この実装はボツに...（めっちゃ時間かけたのに...）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>こんな感じで効くAugmentationと効かないAugmentationがあったので，早い段階でこの実装と実験ができていれば，もっと豊かな実験ができたかなと反省しています．</p>\n<p>Augmentationはいずれコンペ中は確実に試すことになると思うので，早めに効くかどうか先にやっておくといいのかも（？）</p>\n<h2>まとめ</h2>\n<p>最後に今回のコンペで得た知見をまとめたいと思います．</p>\n<ul>\n<li>Augmentationはタスク依存．課題感を意識したり，早めに取り組んだ方がいいかも（？）</li>\n<li>データセットのやりくりはサボらない\n<ul>\n<li>外部データの調査とかEDAとか</li>\n</ul>\n</li>\n<li>スコアだけでなく，予測値も確認してみる\n<ul>\n<li>今回はラベル分布とかそういうのではないので，生成画像もしっかり確認するなど</li>\n<li>それを割としっかりやったのでSobel Filterに行き着いたと思っています．</li>\n</ul>\n</li>\n<li>論文とにかく読んでアイデアを得よう\n<ul>\n<li>めっちゃ読んで，実装して効かなかったアイデアが8割くらいだったけど，楽しかったです．</li>\n<li>今，大学で取り組んでいるNLPの研究にアイデアが入ったりしているので，やり切るって大事！</li>\n</ul>\n</li>\n<li><strong>楽しむ！！！</strong>\n<ul>\n<li>コンペは序盤と終盤がとても辛いです．\n<ul>\n<li>序盤：バグが取れない．公開のやつに勝てない．</li>\n<li>終盤：スコアが伸び悩む．</li>\n</ul>\n</li>\n<li>でも，やり切れば結果楽しい（MScupが楽しかった説に一票ですが😂）</li>\n<li>CVやLBをおかずに飯が食えるぞ？</li>\n</ul>\n</li>\n</ul>\n<p>僕が今回のMScupを通して学んだことはこんなところでしょうか．次もしSolafuneのコンペに参加することがあれば，しっかり賞金圏に入りたいと思います！</p>\n<p>最後に今回のコンペで使ったライブラリや実装したコードを載せて終わりにしたいと思います．</p>\n<p>つらつらと思うところを書きましたが，最後まで読んでいただきありがとうございます．意見やご指摘などがありましたら，Twitterなどでご連絡ください．</p>\n<h2>よく使ったライブラリなど</h2>\n<p>今回のコンペでよく使えたライブラリなどを載っけておきます．</p>\n<ul>\n<li><a href=\"https://kornia.readthedocs.io/en/latest/index.html\">kornia</a>\n<ul>\n<li>ssim lossやsobel filterなど，画像処理で手前実装が大変でかゆいところに手が届きました．今後も自分は使うことがありそうだと感じました．</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/JingyunLiang/SwinIR\">SwinIR</a>\n<ul>\n<li>SISRにおけるSOTAモデル．事前学習済みモデルが公開されており，重宝しました．一番強かった...</li>\n<li><a href=\"https://arxiv.org/abs/2108.10257\">paper</a></li>\n</ul>\n</li>\n<li><a href=\"https://huggingface.co/models?other=image-super-resolution\">image-super-resolution</a>\n<ul>\n<li>さまざまなSuper Resolutionタスクでのモデルの再現実装をされています．</li>\n<li>今回のコンペでは精度が微妙だったのでサブには使いませんでしたが，SISRタスクで遊びたい時に簡単に扱えると思います．</li>\n</ul>\n</li>\n<li>Pytorch Lightning\n<ul>\n<li>単純にファン．もう楽</li>\n</ul>\n</li>\n<li>Pytorch</li>\n<li>cv2\n<ul>\n<li>RGBの順番気をつけましょう．これで2週間くらい無駄にしました笑笑</li>\n</ul>\n</li>\n</ul>\n<h2>実装したコード</h2>\n<p><a href=\"https://github.com/yuta0306/SRAugmentation\">SRAugmentation</a>にて公開しています．</p>\n<p>初めてGitHubでスターをもらって喜んでいました（小並感</p>\n<p>CutBlurなど，Single Image Super ResolutionにおけるData Augmentationの手法を改めてPytorchのパイプラインに組み込めるように再実装したものです．</p>\n<p>こちらの論文で提案されています．<a href=\"https://arxiv.org/abs/2004.00448\">Rethinking Data Augmentation for Image Super-resolution: A Comprehensive Analysis and a New Strategy</a></p>\n</body>\n</html>\n","Title":"【🛰MScup】超解像コンペで11位だったけど，やったことまとめまくる","Date":"2022-02-13","Category":"Competition","Tags":["データ分析","超解像","SISR","Super-Resolution","Pytorch"],"Authors":"ゆうぼう","Slug":"mscup-feedback","Thumbnail":"/images/thumbnails/mscup.jpg","Description":"MScupで低解像度を超解像化する珍しいコンペが出てきて，2ヶ月従事したけど11位で終わってしまいました．でも，学べることがたくさんあったし，画像系コンペに出てこなかったので，画像系でも活かせそうな知見が得られて楽しいコンペでした．実験してみて効いたこと効かなかったことや学んだことをまとめます．","Published":true},{"contentHtml":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css\">\n</head>\n<body>\n<p>atmaCup#10に参加しました。しっかりとコンペにフルコミットしたのは今回が初めてなので、ほぼ初参加と言っていいでしょう。しかし、結果はPublic: 137位でPrivate: 130位(+7)というクソ雑魚結果に...。</p>\n<p>これは大反省会をして次に生かすことに他ならないということで久々にブログに記します。誰かのお役に立てれば嬉しいかなと思いながら、大反省をしていきます。</p>\n<h2>とりあえず結果から</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">RANKING</th>\n<th align=\"left\">RMSLE SCORE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Public</td>\n<td align=\"left\">137</td>\n<td align=\"left\">1.0213</td>\n</tr>\n<tr>\n<td align=\"left\">Private</td>\n<td align=\"left\">130(+7)</td>\n<td align=\"left\">1.0354(-0.0141)</td>\n</tr>\n</tbody>\n</table>\n<p>詳細な結果はご覧の通りです。</p>\n<p>めっちゃクソ雑魚すぎて...。反省点は永遠に出てきそうですが、</p>\n<ul>\n<li>どこで負けたのか。敗因はなんなのか？</li>\n<li>参考になったディスカッション</li>\n<li>これから対策すること</li>\n</ul>\n<p>この辺に沿って大反省をしていこうと思います。</p>\n<h2>MyModel</h2>\n<h3>モデル</h3>\n<p>反省するために、自分のモデルと特徴量を整理していきます。</p>\n<p>まず、僕の作成したモデルが以下になっています。</p>\n<ul>\n<li>Model: LightGBM (10 FoldのAverage)</li>\n<li>KFold: Stratified 10-Fold</li>\n<li>parameters:\n<ul>\n<li>'boosting_type': 'gbdt',</li>\n<li>'feature_pre_filter': False,</li>\n<li>'lambda_l1': 0.00024503835566927994,</li>\n<li>'lambda_l2': 9.900190817327861e-07,</li>\n<li>'num_leaves': 56,</li>\n<li>'feature_fraction': 0.8999999999999999,</li>\n<li>'bagging_fraction': 1.0,</li>\n<li>'bagging_freq': 0,</li>\n<li>'min_child_samples': 20,</li>\n<li>'num_iterations': 100000,</li>\n<li>'early_stopping_round': 200,</li>\n<li>'learning_rate': 0.02,</li>\n</ul>\n</li>\n</ul>\n<p>上記パラメータはoptunaでチューニングしました。チューニングで上がったCVスコアは<em>0.002</em>くらいでしたね(笑)</p>\n<p>ほとんど寄与していないですが、気持ちチューニングしたって感じです。</p>\n<h3>特徴量</h3>\n<p>使用した特徴量をまとめます。<br>\n一応効いた順に並べていきます。</p>\n<table>\n<thead>\n<tr>\n<th>特徴量</th>\n<th>寄与度</th>\n<th>労力</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>collection, techniques, materialのWord2Vec => PCA2次元</td>\n<td><strong>絶大</strong></td>\n<td><a href=\"https://www.guruguru.science/competitions/16/discussions/2fafef06-5a26-4d33-b535-a94cc9549ac4/\">アライさんのディスカッション</a>により小</td>\n</tr>\n<tr>\n<td>principal_makerのカテゴリ</td>\n<td><strong>絶大</strong></td>\n<td>astype('category)なので小</td>\n</tr>\n<tr>\n<td>subtitle => W,H,T,D</td>\n<td><strong>絶大</strong></td>\n<td>中</td>\n</tr>\n<tr>\n<td>subtitle => WxH</td>\n<td>大</td>\n<td>中</td>\n</tr>\n<tr>\n<td>more_title, titleのTF-IDF => PCA2次元</td>\n<td>大</td>\n<td>大</td>\n</tr>\n<tr>\n<td>principal_makerの出現回数</td>\n<td>大</td>\n<td>小</td>\n</tr>\n<tr>\n<td>datingのUNIX時間 / 1E6</td>\n<td>大</td>\n<td>中</td>\n</tr>\n<tr>\n<td>aquisition_dating - year_late</td>\n<td>大</td>\n<td>中</td>\n</tr>\n<tr>\n<td>dating_timeのカテゴリ変数化</td>\n<td>大</td>\n<td>小</td>\n</tr>\n<tr>\n<td>その他諸のカテゴリ変数</td>\n<td>皆無</td>\n<td>大</td>\n</tr>\n<tr>\n<td>paletteの平均,分散,Top色</td>\n<td>ほぼなし</td>\n<td><strong>絶大</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>テキスト系</strong>の特徴量がとても効いていたという印象があります。カラー系はそもそも絵画ということから、テーブルデータであることから離れて考えて、色々仮説は立てましたが、ほぼほぼ意味なかったというね。。。(笑)</p>\n<p>色系統で立てた仮説は、こんな感じでした。</p>\n<ul>\n<li>色の統一感があった方が印象が一定? (分散を見ればわかるのでは)</li>\n<li>割合上位色の平均とか分散に依存するのでは?</li>\n<li>逆に割合下位色は差し色として効果があるのでは?</li>\n</ul>\n<p>どれも工夫して結構特徴量に入れたのですが、ほとんどが効いていなくて半ば泣きそうでした(笑)</p>\n<p>後半にディスカッションからピックアップしてきたテキスト系がうまいこと効いてくれて、最後の最後にスコアがなんと<strong>0.02</strong>も飛躍するということに...。</p>\n<p>「おい、なんでお前はテキスト系にdeadline前日に目をつけてるんだよ」とかいうお気持ちになりましたが(笑)</p>\n<p>ま、それはそれで良い経験でした。</p>\n<h2>敗因と今後の展望</h2>\n<p>悲惨な結果になりましたので、ここでしっかり敗因を考えていこうと思います。</p>\n<p>とにかく敗因は多いと思うので、列挙していこうと思います。この辺は同じような結果の人なら同じこと考えているんじゃないかな。。。</p>\n<ul>\n<li>自分なりのパイプラインがない(Kaggle routine的な)</li>\n<li>実験管理が甘々(ファイル管理雑 => 前やったこととCV,LBがわからん)</li>\n<li>関数とかクラスを用意しないから再利用生にかける</li>\n<li>EDAが雑雑雑雑......</li>\n<li>仮説と実験、立証の思考が浅い(仮説が正しくない時の次がない)</li>\n<li><strong>テキスト特徴量</strong>の効果に気づいたのが前日の金曜日()</li>\n<li>ディスカッションをみた後実装すぐしない</li>\n<li>単純に経験と学習量が足りない</li>\n</ul>\n<p>無限に出てきそうですが、とりあえず主要な原因は上記にあると思います。</p>\n<p>最後の単純に経験と学習量に関しては気持ち程度の言い訳で、自分よりも経験が浅いだろう人は上位にたくさんいるので、やり方が悪いとしか思えません。というわけで、最も敗因になったであろうことを深ぼってみようと思います。</p>\n<h3>EDAが雑</h3>\n<p>EDAって一番地味だけど、仮説立てたり、相関をみつたりと各情報の作用を考える最も重要な時間になります。</p>\n<p>今回はEDAが大事ということを肝に銘じた上でEDAを行ったつもりでしたが、それも「つもり」で終わってしまったような気がします。</p>\n<p>色々変換したりグラフ化したりしてみましたが、今回はリレーショナルな情報が多かったです。例えば、principal_makerとかmaterialとか。メインのデータにあった特徴量や数値、時間と言った数値の連続値に変換しやすいデータに関しては結構データを読み込んだ感じでした。</p>\n<p>しかし、テキストなどスパースで離散的なデータに関しては実験ベースでしっかり分析できていなかったです。特に、それを感じたのがこれもまた<em>アライさんのディスカッション</em>でした。<a href=\"https://www.guruguru.science/competitions/16/discussions/f463dac2-4233-42d2-8629-ca99a9689987/\">タイトルの言語判定特徴</a>ってやつですね。こんな情報まで気づくというのは、しっかり時間かけてEDAしているんだろうなぁ。自分は浅はかな分析しかできていないじゃないか。と思ったわけです。</p>\n<p>YouTube講座第二回の時にも、RainCloudとかいうのもありましたし、もっと詳しく直感的なEDAをしていかないといけません。今回それができなかったのが大きな敗因でした。</p>\n<h3>パイプライン的なのがない</h3>\n<p>パイプライン的な物を持っていないというのが敗因というよりは、ライブラリを知らないという方がこの反省には近いかもしれません。</p>\n<p>パイプラインはこれから作ろうと思いますし、今回のディスカッションの中でも今後パイプラインとなりうるのが沢山見つかっているので、これからそれらを自分の懐に隠していこうと思います(笑)</p>\n<p>ライブラリの使い方、なければ自分なりのモジュールを作る、それらを一連の流れとして蓄える。</p>\n<p>このフローを身につければ、労力がだんだん少なくなっていき、より深い思考フェーズに時間を割けるのだろうなと感じました。</p>\n<h3>実験管理が甘々</h3>\n<p>僕はとりわけ記憶力にかけているのにもかかわらず、特にメモもせずにおおよそ一つのnotebookで管理していました。</p>\n<p>そりゃぁごっちゃになるに決まってるよ...。</p>\n<p>管理の仕方は人それぞれだと思いますし、やりながら身につけていかなければならないでしょう。しかし、意識してやらないとベストプラクティスは見つからないわけで。。。</p>\n<p>参考になるディスカッションがあったので、<a href=\"https://www.guruguru.science/competitions/16/discussions/cc793380-410d-413e-bac4-f46d4aa836fd/\">こちら</a>を参考に自分なりの手法を探るのが近道な気がします。</p>\n<p>ちなみに、昨日atmaCup#10が終わり、新しくコンペに参戦していますが、<br>\ntokaiさんの「自分も1実験1ノートブックで、それぞれの実験に番号をつけてます。また特徴量にも番号をつけています。Google スプレッドシートでスコア管理していて、その際に、①model、②使用した特徴量（番号）③スコアを入力しています。」というコメントを参考にしています。</p>\n<p>やりながら探っていこうと思います。</p>\n<h3><strong>テキスト特徴量</strong>の効果に気づいたのが前日の金曜日</h3>\n<p>これはいうまでもなくディスカッションをしっかりやらなかった自分が悪いです。</p>\n<p>閉会式でもおっしゃられていましたが、<strong>とにかくディスカッションは参考にやってみる</strong>というのは確かにそうだなと思いました。</p>\n<p>自分の仮説に拘るよりも、他の人が見つけた良い特徴量を試してみて、その後自分のやるもいいし、ディスカッションの中身を魔改造するもいいし、<br>\nまずはディスカッションをやってみるのはベターな考え方だなと感心しました。</p>\n<p>次からそうしよっと。</p>\n<h2>これから意識することとは</h2>\n<p>ここまで大反省会をしてきて(記事を書きながら自分の中のモヤモヤを精査する中で)、自分に足りない物が多すぎるということに直面しました。</p>\n<p>ただ、それでもやるべきことは決まってきたので、良い経験になったと思います。自分の課題は自分だけのものではないと思いますので、意識することをまた列挙していきます(ただ面倒臭くなっただけ)(笑)</p>\n<ul>\n<li>EDAはとにかく丁寧に。モデリングなんて二の次でいいくらい</li>\n<li>実験管理をしよう!!! (とりあえずGoogle SpreadSheet試す)</li>\n<li>ディスカッションの内容はなるだけ拾い上げる!</li>\n<li>ベストプラクティスを見つけたら、すぐパイプライン化する</li>\n</ul>\n<p>当面コンペに対して、経験を身に付けるまでは上記の内容を自然とできるように意識的に取り組んでいきます。</p>\n<p>そして、これから意識することは多分この記事をみてくださった方にも共通することもあると思いますので、皆さんの反省会にも影響を与えられたらという淡い期待を持ちながら反省会を締めたいと思います。</p>\n<p>とても楽しく学びになるコンペを設計してくださったことに感謝しつつ、次のatmaCupもすごく期待しております。</p>\n<p>atmaCupの開催ありがとうございました、そして参加者のみなさまお疲れ様でした!!!!!<strong>((感謝 + 労り) * inf)</strong></p>\n</body>\n</html>\n","Title":"atmaCup#10大反省会(Public: 137位/Private: 130位)","Date":"2021-03-14","Category":"Competition","Tags":["Python","データ分析","atmaCup"],"Authors":"ゆうぼう","Slug":"atmacup10-feedback","Thumbnail":"/images/thumbnails/atma%2310.png","Description":"atmaCup#10に参加しました。しっかりとコンペにフルコミットしたのは今回が初めてなので、ほぼ初参加と言っていいでしょう。しかし、結果はPublic: 137位でPrivate: 130位(+7)というクソ雑魚結果に...。これは大反省会をして次に生かすことに他ならないということで久々にブログに記します。誰かのお役に立てれば嬉しいかなと思いながら、大反省をしていきます。","Published":true}],"tag":"データ分析","categories":["論文","Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","Colab","COMET,mental health,NLP,mental state knowledge,mentalisation,Contrasive Learning,MentalRoBERTa,KC-Net","conda","CSS","dialogue system","dialogue system,Internet-Augmented","dialogue system,knowledge-base","dialogue system,NLI","dialogue system,persona,Prompt-Tuning","dialogue system,survey,DST","ESPNet","ffmpeg","Flask","Go","Google Colaboratory","Heroku","HTML","humor detection,multi-modal","JavaScript","JSON","Kaggle","laughter,shared laughter","Linux","Mac","make","map","MeCab","ML","MT,transformer,Multi-Hop Transformer","MySQL","NLP","Node","node.js","npm","Pandas","Poetry","Python","Pytorch","pytorch-lightning","Scikit-learn","Selenium","SISR","subprocess","Super-Resolution","survey,dialogue system","survey,NLP,knowledge-base,PLMKE,commonsense,encyclopedic,Knowledge-Intensive NLP","tensorflow","Tkinter","transformer,Highway Transformer,Gating Mechanism,Self-Dependency-Units (SDU)","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド","超解像"],"pages":1,"page":1},"__N_SSG":true}