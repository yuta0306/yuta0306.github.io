{"pageProps":{"postData":{"contentHtml":"<p>一応参考書通りに学習するのだが、基本的にはいつも最新版をインストールして使う人間なもので、Warning及びErrorとの戦いはよくあることです。ので、Warningとかが出るとうっと身構えてしまうので、困らないように備忘録かつ反面教師として残しておきます。</p>\n<h2>とりあえずmake_forge()をやってみようか</h2>\n<p>とりあえずmake_forge()でforgeデータを生成し、Warningさせてみますかね。。。</p>\n<p>ライブラリはmglearnを使うのでpip環境がある人は、<strong>pip install mglearn</strong>をしてください。その上で、</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> mglearn    <span class=\"hljs-comment\"># mglearnのインポート</span>\nX, y = mglearn.datasets.make_forge()    <span class=\"hljs-comment\"># make_forgeメソッドで生成</span>\n</code></pre>\n<p>以下がアウトプットです。</p>\n<pre><code class=\"hljs language-bash\">/Users/user/opt/anaconda3/envs/ML/lib/python3.6/site-packages/sklearn/utils/deprecation.py:86: FutureWarning: Function make_blobs is deprecated; Please import make_blobs directly from scikit-learn\nwarnings.warn(msg, category=FutureWarning)\n</code></pre>\n<p>なんだかWarningで怒られましたorz</p>\n<p>将来的にsklearn.datasets.makeblobs()と被るよってことを言いたいらしいです。<em>scikit-learnから直接make_blobsをインポートしろ</em>とか言ってますね。\n次からWarningを避けて行きます。</p>\n<h2>make_blobsに乗り換える</h2>\n<p>make_blobsメソッドに乗り換えて行きます。これはscikit-learnのdatasetsモジュールに含まれているみたいなので、こいつをインポートして行きます。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> sklearn.datasets <span class=\"hljs-keyword\">import</span> make_blobs    <span class=\"hljs-comment\"># これでインポート完了</span>\n</code></pre>\n<p>インポートがうまくいったら次はメソッドを呼び出します。</p>\n<pre><code class=\"hljs language-python\">X, y = make_blobs()\n</code></pre>\n<p>これでデータがうまく生成されたようです。無事Warningも出てきません!!!\n念のため、Xの型をみて行きます。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"X.shape: {}\"</span>.<span class=\"hljs-built_in\">format</span>(X.shape))\n\n<span class=\"hljs-comment\"># -> X.shape: (100, 2)</span>\n</code></pre>\n<p>詰まるところ、2つの特徴量を持つデータが100個生成されました。100*2の行列ですね。\nmake_forge()のときは2つの特徴量のデータが26個を期待していたようなので、データ量が増えたみたいですね。</p>\n<h2>まとめ</h2>\n<p>mglearn.datasets.make_forge()でWarningを回避する方法のまとめがこちらです。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> sklearn.datasets <span class=\"hljs-keyword\">import</span> make_blobs    <span class=\"hljs-comment\"># インポート</span>\nX, y = make_blobs()    <span class=\"hljs-comment\"># make_blobsメソッドの実行</span>\n\n<span class=\"hljs-string\">\"\"\"\n確認のおまけ\n\"\"\"</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"X.shape: {}\"</span>.<span class=\"hljs-built_in\">format</span>(X.shape))\n\n<span class=\"hljs-comment\">#-> X.shape: (100, 2)    # 特徴量を2つ持つ100個のデータ</span>\n</code></pre>\n<p>scikit-learn周りは、アップデートが早いので少し古い技術書なだけでも、Future Warningが出たり、Errorが出たりすることが多々あります。\n気をつけながら学習をする必要がありそうですね。では、今回はここまで！</p>","Title":"scikit-learnのmake_blobsに乗り換えよう!!","Date":"2020-07-21","Category":"Python","Tags":["ML","Python","Scikit-learn"],"Authors":"ゆうぼう","Slug":"prefer-to-make_blobs","Thumbnail":"/images/thumbnails/python.jpg","Description":"Pythonではじめる機械学習をやっている最中に、mglearnというライブラリからmake_forge()メソッドでデータを生成することがあったのですが、Warningが出て怒られたので、推奨される形に戻すために互換性のあるコードに直します。","Published":true},"categories":["論文","Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","Colab","COMET","commonsense","conda","Contrasive Learning","Contrastive Learning","CSS","Dialogue Structure Learning","dialogue system","DST","empathetic dialogue system","encyclopedic","ESPNet","ffmpeg","Flask","Gating Mechanism","Go","Google Colaboratory","Heroku","Highway Transformer","HTML","humor detection","Internet-Augmented","JavaScript","JSON","Kaggle","KC-Net","knowledge-base","Knowledge-Intensive NLP","laughter","Linux","Mac","make","map","MeCab","mental health","mental state knowledge","mentalisation","MentalRoBERTa","ML","MT","Multi-Hop Transformer","multi-modal","MySQL","NLG","NLI","NLP","Node","node.js","npm","Pandas","persona","PLMKE","Poetry","Prompt-Tuning","Python","Pytorch","pytorch-lightning","Scikit-learn","Selenium","Self-Dependency-Units (SDU)","shared laughter","SISR","subprocess","Super-Resolution","survey","tensorflow","Tkinter","transformer","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド","聞き手反応","超解像"]},"__N_SSG":true}