{"pageProps":{"CategoricalPostData":[{"contentHtml":"<h2>MySQLにアクセス</h2>\n<p>最初に、MySQLにアクセスして対話モードを実行していきましょう。</p>\n<pre><code class=\"hljs language-bash\">$~ mysql -u root -p    <span class=\"hljs-comment\">#root権限で入ってみる</span>\nEnter password: **********\n~~ 以下略 ~~\n\nmysql> </code></pre>\n<p>まずはコレで準備OK</p>\n<h2>テーブルの型のチェックと期待する変更結果の提示</h2>\n<p>さて、ここからカラムを追加していきましょう。元々のテーブル(example_tableと名付ける)は以下を想定します。</p>\n<table>\n<thead>\n<tr>\n<th>user</th>\n<th>age</th>\n<th>height</th>\n<th>weight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>VARCHAR(32)</td>\n<td>INT</td>\n<td>FLOAT</td>\n<td>FLOAT</td>\n</tr>\n</tbody>\n</table>\n<p>まずは調べてみましょう。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">DESCRIBE</span> example_table;\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-operator\">|</span> Field     <span class=\"hljs-operator\">|</span> Type          <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">Null</span> <span class=\"hljs-operator\">|</span> Key <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">Default</span> <span class=\"hljs-operator\">|</span> Extra <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">user</span>      <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">32</span>)   <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> age       <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">int</span>           <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> height    <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">float</span>         <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> weight    <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">float</span>         <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-number\">4</span> <span class=\"hljs-keyword\">rows</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">set</span> (<span class=\"hljs-number\">0.00</span> sec)</code></pre>\n<p>そしてここにBMIを定義するカラムを追加してみたいと思います。想定する結果がこちらです。</p>\n<table>\n<thead>\n<tr>\n<th>user</th>\n<th>age</th>\n<th>height</th>\n<th>weight</th>\n<th>bmi</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>VARCHAR(32)</td>\n<td>INT</td>\n<td>FLOAT</td>\n<td>FLOAT</td>\n<td>FLOAT</td>\n</tr>\n</tbody>\n</table>\n<h2>カラムを追加する</h2>\n<p>さて、先ほどの期待結果に合わせてカラムを挿入していきましょう。コマンドの構文としてはこちらになります。</p>\n<p><strong>ALTER TABLE テーブル名 ADD カラム名 型 (オプション);</strong></p>\n<p>それでは実際にコマンドを実行していきましょう。さきの追加によると、</p>\n<table>\n<thead>\n<tr>\n<th>テーブル名</th>\n<th>カラム名</th>\n<th>型</th>\n<th>オプション</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>example_table</td>\n<td>bmi</td>\n<td>FLOAT</td>\n<td>なし</td>\n</tr>\n</tbody>\n</table>\n<p>こちらの情報をもとに構文に当てはめます。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> example_table <span class=\"hljs-keyword\">ADD</span> bmi <span class=\"hljs-type\">FLOAT</span>;\nQuery OK, <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">rows</span> affected (<span class=\"hljs-number\">0.03</span> sec)\nRecords: <span class=\"hljs-number\">0</span>  Duplicates: <span class=\"hljs-number\">0</span>  Warnings: <span class=\"hljs-number\">0</span></code></pre>\n<p>さて、どう変わったのかみてみましょう。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">DESCRIBE</span> example_table;\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-operator\">|</span> Field     <span class=\"hljs-operator\">|</span> Type          <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">Null</span> <span class=\"hljs-operator\">|</span> Key <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">Default</span> <span class=\"hljs-operator\">|</span> Extra <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">user</span>      <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">32</span>)   <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> age       <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">int</span>           <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> height    <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">float</span>         <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> weight    <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">float</span>         <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> bmi       <span class=\"hljs-operator\">|</span> <span class=\"hljs-type\">float</span>         <span class=\"hljs-operator\">|</span> YES  <span class=\"hljs-operator\">|</span>     <span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">NULL</span>    <span class=\"hljs-operator\">|</span>       <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+---------------+------+-----+---------+-------+</span>\n<span class=\"hljs-number\">5</span> <span class=\"hljs-keyword\">rows</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">set</span> (<span class=\"hljs-number\">0.00</span> sec)</code></pre>\n<p>うまくいったようですね。最後の行に期待した通りのカラムが追加されているようです。</p>\n<h2>まとめ</h2>\n<p>構文は以下になります。</p>\n<p><strong>ALTER TABLE テーブル名 ADD カラム名 型 (オプション);</strong></p>\n<p>カラムをいくつか増やしたいときは複数同時に指定してカラムを足すこともできます。\nいつも複数データを扱っているときのように()で括って処理を書きます。</p>\n<p><strong>ALTER TABLE テーブル名 ADD (カラム名 型, カラム名 型, ...);</strong></p>\n<p>このような感じでカラムを追加することができます。必要に応じてNULLを使えなくしたりデフォルト値を決めたりするといいでしょう。\n構文自体はこんな感じでした。技術的に必要になった知識がでたら、また公開していきます。</p>\n","Title":"MySQLで困った!カラム追加したい","Date":"2020-07-21","Category":"SQL","Tags":"MySQL","Authors":"ゆうぼう","Slug":"mysql-add-column","Thumbnail":"/images/thumbnails/database.jpg","Description":"MySQL触ってて、他のコードの変更とか方針の変更に応じてテーブルのカラムを挿入したくなることってあるよね。(自分があった)ので、テーブルにカラムを挿入する方法を共有します。","Published":true},{"contentHtml":"<p>現在conoHa VPSにMySQLの環境を作り外部からアクセスしようとしていました。しかし、ここで問題が...</p>\n<p>リモート接続するためのセットアップってどうやるん？<br>\nしかも何や。記事まねても全然うまくいかないやん...orz</p>\n<p>ってことなのですが、バージョン8にメジャーアップデートにあたり、コマンドの変更があったようなので共有します。</p>\n<p>で、今回はroot権限をどこからでも接続する権限を与えます。</p>\n<h2>sshにてリモートサーバにアクセス</h2>\n<p>まずははじめに、コマンドラインで<strong>ssh</strong>を使ってリモートサーバに入ります。今回はルートとして入ります。</p>\n<pre><code class=\"hljs language-bash\">$~ ssh root@xxx.xxx.x.xxx    <span class=\"hljs-comment\">#@以降はアドレス</span>\nEnter password: **********\n~~ 以下略 ~~\n\n[root@xxx-xxx-x-xxx]<span class=\"hljs-comment\"># </span></code></pre>\n<p>このようにログイン先の情報とともに表示されます。</p>\n<h2>【本題】権限を与える</h2>\n<p>まずはMySQLを起動しまして、以下のコマンドを打ちます。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">'root'</span>@<span class=\"hljs-string\">'%'</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'your-password'</span>;\nQuery OK, <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">rows</span> affected (<span class=\"hljs-number\">0.01</span> sec)\n\nmysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">all</span> PRIVILEGES\n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'root'</span>@<span class=\"hljs-string\">'%'</span> \n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">WITH</span> <span class=\"hljs-keyword\">GRANT</span> OPTION;</code></pre>\n<p>まずは1つ目のコマンドでユーザーを作ります。(<strong>コレが8.0.x以降の仕様なのでドツボにハマるやつ!!</strong>)</p>\n<p>そして2つ目のコマンドにて、権限を付与してきます。ただ、今回は見易さのため複数行にしましたが、1行でも問題はないです。(大文字小文字もあまり気にしなくて良かったりもする)</p>\n<p>あと、'%'ってんはアクセスするIPアドレスを書くところであって、今回はどこからでもアクセスできる(どのPCからでも)を想定するので**'%'**を指定して全てを許可します。</p>\n<p>あと、***.***の部分はデータベースとテーブルの設定ですが、こちらも全てにアクセスができると想定してこちらにしています。任意のデータベースを許可したければ  '任意の名前'.*とでもすれば良いでしょう。</p>\n<p>一応コレで下準備は完了ってところですかね。</p>\n<p>基本的には問題ないのですが、僕が使ってみたconoHa VPSとかだと、ファイヤウォールの設定が必要なので今回は省略。</p>\n<p>ドツボにハマるのはきっとここなので注意。</p>\n<h2>実際にマイナーバージョンでのコマンド打ってみる</h2>\n<p>実際にマイナーバージョンでのコマンドを実行してみますか。(愚行)<br>\nあと小文字でやってみた。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">grant</span> <span class=\"hljs-keyword\">all</span> privileges <span class=\"hljs-keyword\">on</span> \n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">to</span> root@\"%\" identified <span class=\"hljs-keyword\">by</span> <span class=\"hljs-string\">'your-password'</span> \n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-keyword\">grant</span> option;\nERROR <span class=\"hljs-number\">1064</span> (<span class=\"hljs-number\">42000</span>): You have an error <span class=\"hljs-keyword\">in</span> your <span class=\"hljs-keyword\">SQL</span> syntax; <span class=\"hljs-keyword\">check</span> the manual that corresponds <span class=\"hljs-keyword\">to</span> your MySQL server version <span class=\"hljs-keyword\">for</span> the <span class=\"hljs-keyword\">right</span> syntax <span class=\"hljs-keyword\">to</span> use near <span class=\"hljs-string\">'identified by '</span>your<span class=\"hljs-operator\">-</span>password<span class=\"hljs-string\">'\nwith grant option'</span> <span class=\"hljs-keyword\">at</span> line <span class=\"hljs-number\">2</span></code></pre>\n<p>まあこうなってわからないよね。SQL構文チェックしようねって言われるわけだけど、記事も少なかったし、ここはドツボにハマりかけるのかなと思います。</p>\n<h2>まとめ</h2>\n<p>ルートとして外部からどこでもどのデータベースのアクセスを許可するには以下のコマンドを打ちましょう。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">'root'</span>@<span class=\"hljs-string\">'%'</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'your-password'</span>;\nQuery OK, <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">rows</span> affected (<span class=\"hljs-number\">0.01</span> sec)\n\nmysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">all</span> PRIVILEGES\n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'root'</span>@<span class=\"hljs-string\">'%'</span> \n        <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">WITH</span> <span class=\"hljs-keyword\">GRANT</span> OPTION;</code></pre>\n<p>他にも外部サーバの設定のよって動かないことがあるので、それはまた紹介しますが。\n今回はバージョン8.0.xでの変更点に触れました。</p>\n<p>快適なデータベースライフを!!</p>\n","Title":"MySQL8.0.xでリモート接続のセットアップをする!","Date":"2020-07-18","Category":"SQL","Tags":"MySQL","Authors":"ゆうぼう","Slug":"mysql-remote-setup","Thumbnail":"/images/thumbnails/database.jpg","Description":"MySQLでリモート接続のためのセットアップを行いました。現環境はバージョン8.0.19なのですが、前回からのメジャーアップデートにて、コマンドが変わっており大変苦労したので備忘録として。かなりつまずきますので共有します。","Published":true},{"contentHtml":"<p>root権限で何でもかんでも行うのはすごく怖かったので、新たにユーザーを登録していました。しかし、登録したはいいものの削除したくもなるわけです。</p>\n<p>そこで今回は登録されているユーザーを削除する流れを紹介していきます。</p>\n<h2>MySQLにアクセス</h2>\n<p>最初に、MySQLにアクセスして対話モードを実行していきましょう。</p>\n<pre><code class=\"hljs language-bash\">$~ mysql -u root -p    <span class=\"hljs-comment\">#root権限で入ってみる</span>\nEnter password: **********\n~~ 以下略 ~~\n\nmysql> </code></pre>\n<p>まずはコレで準備OK</p>\n<h2>とりあえずユーザー名とホストを調べる</h2>\n<p>ユーザー名とホスト名を調べましょう。ユーザー名が同じものがいくつかあることもありますので、同時にホストも調べておきます。<br>\n消したいユーザーを念のためみておきます。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">user</span>, host <span class=\"hljs-keyword\">FROM</span> mysql.user\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">------------------+-----------+</span>\n<span class=\"hljs-operator\">|</span> <span class=\"hljs-keyword\">user</span>             <span class=\"hljs-operator\">|</span> host      <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">------------------+-----------+</span>\n<span class=\"hljs-operator\">|</span> usr              <span class=\"hljs-operator\">|</span> localhost <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> mysql.infoschema <span class=\"hljs-operator\">|</span> localhost <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> mysql.session    <span class=\"hljs-operator\">|</span> localhost <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> mysql.sys        <span class=\"hljs-operator\">|</span> localhost <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">|</span> root             <span class=\"hljs-operator\">|</span> localhost <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">------------------+-----------+</span>\n<span class=\"hljs-number\">5</span> <span class=\"hljs-keyword\">rows</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">set</span> (<span class=\"hljs-number\">0.00</span> sec)</code></pre>\n<p>コレで確認ができましたね。下の4つは基本的に最初から入っているやつだと思います。\n今回は、一番上の<em>usr</em>というユーザーのパーミッションを削除してやろうと思います。</p>\n<h2>ユーザーを削除する</h2>\n<p>実際に削除していきます。コマンドは以下のようになります。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">USER</span> usr<span class=\"hljs-variable\">@localhost</span>;</code></pre>\n<p>これでとりあえず削除は完了。上では、ユーザー名構文に則って削除しました。<br>\n<strong>ユーザー名</strong>@<strong>ホスト</strong>ということですね。</p>\n<h2>ホストを与えないで削除してみる</h2>\n<p>先ほどは、<strong>ユーザー名</strong>@<strong>ホスト</strong>の形式で削除しましたが、ホスト名を明記しなくても消すことはできます。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">USER</span> usr;</code></pre>\n<p>こんな感じです。こうすると明記する場合でいう「usr@'%'」と同値になります。</p>\n","Title":"MySQLでユーザーの権限を削除する","Date":"2020-07-18","Category":"SQL","Tags":"MySQL","Authors":"ゆうぼう","Slug":"mysql-drop-user","Thumbnail":"/images/thumbnails/database.jpg","Description":"結構初歩的なのだけど、ユーザー権限を削除したくなって構文を覚えたので共有します。","Published":true},{"contentHtml":"<p>MySQLを使い始めたのですが、Pythonのライブラリとのバージョンの制約が厳しいので、バージョンの確認が必要になりました。</p>\n<p>その時の備忘録として、対話モードでバージョンを確認する方法を残します。</p>\n<p>対話モードの開き方から順を追って説明します。</p>\n<h2>MySQLで対話モードを起動</h2>\n<p>まずははじめに、MySQLの対話モードを起動します。(すでに環境が整っていることを前提)</p>\n<p>今回は<strong>ルートユーザーでパスワードを要する</strong>場合を考えます。(自分の設定がそうだからw)</p>\n<pre><code class=\"hljs language-bash\">$~ mysql -uroot -p\nEnter password: **********\n~~ 以下略 ~~\n\nmysql> </code></pre>\n<p>このように「mysql>」というプロンプトの表示とともに起動するはずです。</p>\n<h2>バージョンを確認する</h2>\n<p>ここで実際にバージョンを確認してみます。</p>\n<p>コマンドは「<em>SELECT VERSION()</em>」です。実際に実行すると以下のようになるはずです。(ちなみに環境はMySQL Ver8.0.19を想定)</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">SELECT</span> VERSION();\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-operator\">|</span> VERSION() <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-operator\">|</span> <span class=\"hljs-number\">8.0</span><span class=\"hljs-number\">.19</span>    <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-number\">1</span> <span class=\"hljs-type\">row</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">set</span> (<span class=\"hljs-number\">0.01</span> sec)</code></pre>\n<p>このように、1行目にはコマンド、2行目には実際のバージョン、3行目は実行時間が現れます。</p>\n<p>僕は、よく「;」を打ち忘れるのですが、焦らなくても大丈夫。次のように解決が可能です。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">SELECT</span> VERSION()\n    <span class=\"hljs-operator\">-</span><span class=\"hljs-operator\">></span> ;\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-operator\">|</span> VERSION() <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-operator\">|</span> <span class=\"hljs-number\">8.0</span><span class=\"hljs-number\">.19</span>    <span class=\"hljs-operator\">|</span>\n<span class=\"hljs-operator\">+</span><span class=\"hljs-comment\">-----------+</span>\n<span class=\"hljs-number\">1</span> <span class=\"hljs-type\">row</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">set</span> (<span class=\"hljs-number\">0.01</span> sec)</code></pre>\n<p>「;」がないと、まだ入力が続けられるという意味で、  プロンプトが「->」に変化します。その後、焦らず「;」を打てば問題なしです。</p>\n<h2>対話モードは制約がゆるい？？</h2>\n<p>対話モードにおいては大文字或いは小文字の制約が少しゆるいみたいですね。</p>\n<p>実際以下のコマンドでもバージョン確認ができました。</p>\n<pre><code class=\"hljs language-sql\">mysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">SELECT</span> VERsion();\nmysql<span class=\"hljs-operator\">></span> <span class=\"hljs-keyword\">SELECT</span> version();</code></pre>\n<p>とは言っても、Capslockしてしまえば大文字に固定できますので、見にくさもありますし、大文字と小文字の区別は自分の中でやっておくといいでしょう。</p>\n<h2>まとめ</h2>\n<p>ルートユーザーとして対話モードを起動して、バージョン確認するコマンドはこちらの流れになります。</p>\n<pre><code class=\"hljs language-bash\">$~ mysql -uroot -p\nEnter password: *******</code></pre>\n<p>mysql> SELECT VERSION();\n結果の表示</p>\n<pre><code>\nあとで、ルートユーザー以外でも引数を変えればアクセスできます。  \nのちに紹介しようかなと思います。\n\n</code></pre>\n","Title":"MySQLでバージョンを確認する","Date":"2020-07-12","Category":"SQL","Tags":"MySQL","Authors":"ゆうぼう","Summary":"MySQLの対話モードで使用しているMySQLのバージョンの確認方法です。","Slug":"mysql-version","Thumbnail":"/images/thumbnails/database.jpg","Description":"MySQLを使い始めたのですが、Pythonのライブラリとのバージョンの制約が厳しいので、バージョンの確認が必要になりました。その時の備忘録として、対話モードでバージョンを確認する方法を残します。","Published":true}],"category":"SQL","categories":["Web","JavaScript","Competition","Cloud","Linux","Python","ML","Go","SQL"],"tags":["Apache","Appium","atmaCup","AWS","CentOS7","CentOS8","conda","CSS","ffmpeg","Flask","Go","Google Colaboratory","HTML","JavaScript","JSON","Kaggle","Linux","Mac","make","map","MeCab","ML","MySQL","NLP","node.js","Pandas","Python","Scikit-learn","Selenium","subprocess","tensorflow","Tkinter","zsh","オブジェクト指向","デコレータ","データ分析","特殊メソッド"],"page":1},"__N_SSG":true}